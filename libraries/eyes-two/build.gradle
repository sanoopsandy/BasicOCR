import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.library'

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        proguardFiles 'proguard-rules.pro'
        consumerProguardFiles 'proguard-rules.pro'
    }

    sourceSets {
        main {
            jni.srcDirs = []
            jniLibs.srcDirs = ['src/main/libs']
        }
    }

//    // Call external ndk-build(.cmd) script to build the native code
//    task ndkBuild(type: Exec) {
//        def ndkDirProperty = properties.getProperty('ndk.dir')
//        def ndkDirPrefix = ndkDirProperty != null ? ndkDirProperty + '/' : ''
//
//        def ndkBuildExt = Os.isFamily(Os.FAMILY_WINDOWS) ? ".cmd" : ''
//
//        commandLine "${ndkDirPrefix}ndk-build${ndkBuildExt}", '-C', file('src/main').absolutePath,
//                '-j', Runtime.runtime.availableProcessors()
//    }
//
//    tasks.withType(JavaCompile) {
//        compileTask -> compileTask.dependsOn ndkBuild
//    }
//
//    // Cleanup task to remove previously generated binaries
//    task ndkClean(type: Exec) {
//        def ndkDirProperty = properties.getProperty('ndk.dir')
//        def ndkDirPrefix = ndkDirProperty != null ? ndkDirProperty + '/' : ''
//
//        def ndkBuildExt = Os.isFamily(Os.FAMILY_WINDOWS) ? ".cmd" : ''
//
//        commandLine "${ndkDirPrefix}ndk-build${ndkBuildExt}",'-C', file('src/main').absolutePath, 'clean'
//    }

//    tasks.withType(Delete) {
//        cleanTask -> cleanTask.dependsOn ndkClean
//    }

    lintOptions {
        abortOnError false
    }

}

dependencies {
    compile 'com.rmtheis:tess-two:6.0.4'
    compile fileTree(dir: 'libs', include: ['*.jar'])
}
